#!/bin/bash

GMP_ROOT="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

LLJVM_CC=$HOME/lljvm-cc/lljvm-cc/lljvm-cc
JASMIN_PATH=$HOME/lljvm-cc/tools/jasmin.jar

CLANG_INCLUDE_DIR=$(llvm-config --prefix)/lib/clang/$(llvm-config --version)/include
LLJVM_LIBC_INCLUDE_DIRS="-I$HOME/lljvm-cc/runtime/libc/include -I$HOME/lljvm-cc/runtime/libc/include/compiler -I$CLANG_INCLUDE_DIR -I$HOME/lljvm-cc/runtime/libc/sys/linux/include"
CFLAGS_STD="-nostdinc -O0 -pipe -finline-functions -fsigned-char $LLJVM_LIBC_INCLUDE_DIRS -I. -I.. -DHAVE_CONFIG_H -D__GMP_WITHIN_GMP -D__GLIBC_USE\(...\)=0"
EXTRA_LLJVM_FLAGS=

rm -f $(find . -name "*.bc") $(find . -name "*.ll") $(find . -name "*.j") $(find . -name "*.jar") $(find . -name "*.class")

cd $GMP_ROOT/mpn
CFLAGS="$CFLAGS_STD -DOPERATION_fib_table" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fib_table.c -o fib_table.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mp_bases" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mp_bases.c -o mp_bases.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_add" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c add.c -o add.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_add_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c add_1.c -o add_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_add_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c add_n.c -o add_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sub" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sub.c -o sub.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sub_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sub_1.c -o sub_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sub_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sub_n.c -o sub_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_cnd_add_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cnd_add_n.c -o cnd_add_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_cnd_sub_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cnd_sub_n.c -o cnd_sub_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_cnd_swap" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cnd_swap.c -o cnd_swap.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_neg" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c neg.c -o neg.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_com" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c com.c -o com.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mul_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mul_1.c -o mul_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_addmul_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c addmul_1.c -o addmul_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_submul_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c submul_1.c -o submul_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_add_err1_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c add_err1_n.c -o add_err1_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_add_err2_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c add_err2_n.c -o add_err2_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_add_err3_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c add_err3_n.c -o add_err3_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sub_err1_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sub_err1_n.c -o sub_err1_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sub_err2_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sub_err2_n.c -o sub_err2_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sub_err3_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sub_err3_n.c -o sub_err3_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_lshift" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c lshift.c -o lshift.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_rshift" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c rshift.c -o rshift.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_dive_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c dive_1.c -o dive_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_diveby3" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c diveby3.c -o diveby3.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_divis" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c divis.c -o divis.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_divrem" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c divrem.c -o divrem.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_divrem_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c divrem_1.c -o divrem_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_divrem_2" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c divrem_2.c -o divrem_2.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_fib2_ui" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fib2_ui.c -o fib2_ui.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_fib2m" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fib2m.c -o fib2m.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mod_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mod_1.c -o mod_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mod_34lsub1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mod_34lsub1.c -o mod_34lsub1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mode1o" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mode1o.c -o mode1o.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_pre_divrem_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c pre_divrem_1.c -o pre_divrem_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_pre_mod_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c pre_mod_1.c -o pre_mod_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_dump" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c dump.c -o dump.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mod_1_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mod_1_1.c -o mod_1_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mod_1_2" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mod_1_2.c -o mod_1_2.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mod_1_3" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mod_1_3.c -o mod_1_3.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mod_1_4" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mod_1_4.c -o mod_1_4.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_lshiftc" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c lshiftc.c -o lshiftc.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mul.c -o mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mul_fft" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mul_fft.c -o mul_fft.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mul_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mul_n.c -o mul_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sqr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sqr.c -o sqr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mul_basecase" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mul_basecase.c -o mul_basecase.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sqr_basecase" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sqr_basecase.c -o sqr_basecase.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_nussbaumer_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c nussbaumer_mul.c -o nussbaumer_mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mulmid_basecase" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mulmid_basecase.c -o mulmid_basecase.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom42_mulmid" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom42_mulmid.c -o toom42_mulmid.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mulmid_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mulmid_n.c -o mulmid_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mulmid" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mulmid.c -o mulmid.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_random" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c random.c -o random.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_random2" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c random2.c -o random2.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_pow_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c pow_1.c -o pow_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_rootrem" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c rootrem.c -o rootrem.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sqrtrem" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sqrtrem.c -o sqrtrem.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sizeinbase" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sizeinbase.c -o sizeinbase.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_get_str" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_str.c -o get_str.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_set_str" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_str.c -o set_str.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_compute_powtab" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c compute_powtab.c -o compute_powtab.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_scan0" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c scan0.c -o scan0.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_scan1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c scan1.c -o scan1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_popcount" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c popcount.c -o popcount.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_hamdist" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c hamdist.c -o hamdist.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_cmp" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cmp.c -o cmp.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_zero_p" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c zero_p.c -o zero_p.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_perfsqr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c perfsqr.c -o perfsqr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_perfpow" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c perfpow.c -o perfpow.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_strongfibo" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c strongfibo.c -o strongfibo.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_gcd_11" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c gcd_11.c -o gcd_11.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_gcd_22" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c gcd_22.c -o gcd_22.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_gcd_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c gcd_1.c -o gcd_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_gcd" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c gcd.c -o gcd.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_gcdext_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c gcdext_1.c -o gcdext_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_gcdext" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c gcdext.c -o gcdext.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_gcd_subdiv_step" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c gcd_subdiv_step.c -o gcd_subdiv_step.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_gcdext_lehmer" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c gcdext_lehmer.c -o gcdext_lehmer.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_div_q" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c div_q.c -o div_q.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_tdiv_qr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c tdiv_qr.c -o tdiv_qr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_jacbase" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c jacbase.c -o jacbase.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_jacobi_2" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c jacobi_2.c -o jacobi_2.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_jacobi" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c jacobi.c -o jacobi.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_get_d" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_d.c -o get_d.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_matrix22_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c matrix22_mul.c -o matrix22_mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_matrix22_mul1_inverse_vector" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c matrix22_mul1_inverse_vector.c -o matrix22_mul1_inverse_vector.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_hgcd_matrix" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c hgcd_matrix.c -o hgcd_matrix.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_hgcd2" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c hgcd2.c -o hgcd2.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_hgcd_step" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c hgcd_step.c -o hgcd_step.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_hgcd_reduce" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c hgcd_reduce.c -o hgcd_reduce.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_hgcd" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c hgcd.c -o hgcd.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_hgcd_appr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c hgcd_appr.c -o hgcd_appr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_hgcd2_jacobi" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c hgcd2_jacobi.c -o hgcd2_jacobi.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_hgcd_jacobi" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c hgcd_jacobi.c -o hgcd_jacobi.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mullo_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mullo_n.c -o mullo_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mullo_basecase" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mullo_basecase.c -o mullo_basecase.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sqrlo" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sqrlo.c -o sqrlo.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sqrlo_basecase" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sqrlo_basecase.c -o sqrlo_basecase.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom22_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom22_mul.c -o toom22_mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom32_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom32_mul.c -o toom32_mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom42_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom42_mul.c -o toom42_mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom52_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom52_mul.c -o toom52_mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom62_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom62_mul.c -o toom62_mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom33_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom33_mul.c -o toom33_mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom43_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom43_mul.c -o toom43_mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom53_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom53_mul.c -o toom53_mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom54_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom54_mul.c -o toom54_mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom63_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom63_mul.c -o toom63_mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom44_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom44_mul.c -o toom44_mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom6h_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom6h_mul.c -o toom6h_mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom6_sqr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom6_sqr.c -o toom6_sqr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom8h_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom8h_mul.c -o toom8h_mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom8_sqr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom8_sqr.c -o toom8_sqr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom_couple_handling" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom_couple_handling.c -o toom_couple_handling.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom2_sqr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom2_sqr.c -o toom2_sqr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom3_sqr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom3_sqr.c -o toom3_sqr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom4_sqr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom4_sqr.c -o toom4_sqr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom_eval_dgr3_pm1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom_eval_dgr3_pm1.c -o toom_eval_dgr3_pm1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom_eval_dgr3_pm2" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom_eval_dgr3_pm2.c -o toom_eval_dgr3_pm2.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom_eval_pm1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom_eval_pm1.c -o toom_eval_pm1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom_eval_pm2" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom_eval_pm2.c -o toom_eval_pm2.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom_eval_pm2exp" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom_eval_pm2exp.c -o toom_eval_pm2exp.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom_eval_pm2rexp" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom_eval_pm2rexp.c -o toom_eval_pm2rexp.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom_interpolate_5pts" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom_interpolate_5pts.c -o toom_interpolate_5pts.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom_interpolate_6pts" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom_interpolate_6pts.c -o toom_interpolate_6pts.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom_interpolate_7pts" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom_interpolate_7pts.c -o toom_interpolate_7pts.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom_interpolate_8pts" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom_interpolate_8pts.c -o toom_interpolate_8pts.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom_interpolate_12pts" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom_interpolate_12pts.c -o toom_interpolate_12pts.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_toom_interpolate_16pts" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c toom_interpolate_16pts.c -o toom_interpolate_16pts.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_invertappr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c invertappr.c -o invertappr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_invert" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c invert.c -o invert.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_binvert" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c binvert.c -o binvert.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mulmod_bnm1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mulmod_bnm1.c -o mulmod_bnm1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sqrmod_bnm1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sqrmod_bnm1.c -o sqrmod_bnm1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_div_qr_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c div_qr_1.c -o div_qr_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_div_qr_1n_pi1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c div_qr_1n_pi1.c -o div_qr_1n_pi1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_div_qr_2" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c div_qr_2.c -o div_qr_2.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_div_qr_2n_pi1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c div_qr_2n_pi1.c -o div_qr_2n_pi1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_div_qr_2u_pi1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c div_qr_2u_pi1.c -o div_qr_2u_pi1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sbpi1_div_q" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sbpi1_div_q.c -o sbpi1_div_q.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sbpi1_div_qr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sbpi1_div_qr.c -o sbpi1_div_qr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sbpi1_divappr_q" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sbpi1_divappr_q.c -o sbpi1_divappr_q.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_dcpi1_div_q" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c dcpi1_div_q.c -o dcpi1_div_q.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_dcpi1_div_qr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c dcpi1_div_qr.c -o dcpi1_div_qr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_dcpi1_divappr_q" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c dcpi1_divappr_q.c -o dcpi1_divappr_q.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mu_div_qr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mu_div_qr.c -o mu_div_qr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mu_divappr_q" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mu_divappr_q.c -o mu_divappr_q.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mu_div_q" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mu_div_q.c -o mu_div_q.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_bdiv_q_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c bdiv_q_1.c -o bdiv_q_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sbpi1_bdiv_q" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sbpi1_bdiv_q.c -o sbpi1_bdiv_q.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sbpi1_bdiv_qr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sbpi1_bdiv_qr.c -o sbpi1_bdiv_qr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sbpi1_bdiv_r" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sbpi1_bdiv_r.c -o sbpi1_bdiv_r.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_dcpi1_bdiv_q" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c dcpi1_bdiv_q.c -o dcpi1_bdiv_q.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_dcpi1_bdiv_qr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c dcpi1_bdiv_qr.c -o dcpi1_bdiv_qr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mu_bdiv_q" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mu_bdiv_q.c -o mu_bdiv_q.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_mu_bdiv_qr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mu_bdiv_qr.c -o mu_bdiv_qr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_bdiv_q" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c bdiv_q.c -o bdiv_q.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_bdiv_qr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c bdiv_qr.c -o bdiv_qr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_broot" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c broot.c -o broot.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_brootinv" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c brootinv.c -o brootinv.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_bsqrt" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c bsqrt.c -o bsqrt.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_bsqrtinv" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c bsqrtinv.c -o bsqrtinv.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_divexact" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c divexact.c -o divexact.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_bdiv_dbm1c" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c bdiv_dbm1c.c -o bdiv_dbm1c.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_redc_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c redc_1.c -o redc_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_redc_2" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c redc_2.c -o redc_2.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_redc_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c redc_n.c -o redc_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_powm" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c powm.c -o powm.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_powlo" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c powlo.c -o powlo.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sec_powm" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sec_powm.c -o sec_powm.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sec_mul" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sec_mul.c -o sec_mul.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sec_sqr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sec_sqr.c -o sec_sqr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sec_div_qr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sec_div_qr.c -o sec_div_qr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sec_div_r" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sec_div_r.c -o sec_div_r.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sec_pi1_div_qr" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sec_pi1_div_qr.c -o sec_pi1_div_qr.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sec_pi1_div_r" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sec_pi1_div_r.c -o sec_pi1_div_r.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sec_add_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sec_add_1.c -o sec_add_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sec_sub_1" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sec_sub_1.c -o sec_sub_1.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sec_invert" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sec_invert.c -o sec_invert.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_trialdiv" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c trialdiv.c -o trialdiv.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_remove" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c remove.c -o remove.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_and_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c and_n.c -o and_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_andn_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c andn_n.c -o andn_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_nand_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c nand_n.c -o nand_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_ior_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c ior_n.c -o ior_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_iorn_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c iorn_n.c -o iorn_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_nior_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c nior_n.c -o nior_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_xor_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c xor_n.c -o xor_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_xnor_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c xnor_n.c -o xnor_n.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_copyi" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c copyi.c -o copyi.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_copyd" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c copyd.c -o copyd.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_zero" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c zero.c -o zero.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_sec_tabselect" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sec_tabselect.c -o sec_tabselect.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_comb_tables" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c comb_tables.c -o comb_tables.bc || exit 1
CFLAGS="$CFLAGS_STD -DOPERATION_add_n_sub_n" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c add_n_sub_n.c -o add_n_sub_n.bc || exit 1
${LLJVM_CC} -v -m -C lib.gmp.mpn -o $GMP_ROOT/lib.gmp.mpn.bc fib_table.bc mp_bases.bc add.bc add_1.bc add_n.bc sub.bc sub_1.bc sub_n.bc cnd_add_n.bc cnd_sub_n.bc cnd_swap.bc neg.bc com.bc mul_1.bc addmul_1.bc submul_1.bc add_err1_n.bc add_err2_n.bc add_err3_n.bc sub_err1_n.bc sub_err2_n.bc sub_err3_n.bc lshift.bc rshift.bc dive_1.bc diveby3.bc divis.bc divrem.bc divrem_1.bc divrem_2.bc fib2_ui.bc fib2m.bc mod_1.bc mod_34lsub1.bc mode1o.bc pre_divrem_1.bc pre_mod_1.bc dump.bc mod_1_1.bc mod_1_2.bc mod_1_3.bc mod_1_4.bc lshiftc.bc mul.bc mul_fft.bc mul_n.bc sqr.bc mul_basecase.bc sqr_basecase.bc nussbaumer_mul.bc mulmid_basecase.bc toom42_mulmid.bc mulmid_n.bc mulmid.bc random.bc random2.bc pow_1.bc rootrem.bc sqrtrem.bc sizeinbase.bc get_str.bc set_str.bc compute_powtab.bc scan0.bc scan1.bc popcount.bc hamdist.bc cmp.bc zero_p.bc perfsqr.bc perfpow.bc strongfibo.bc gcd_11.bc gcd_22.bc gcd_1.bc gcd.bc gcdext_1.bc gcdext.bc gcd_subdiv_step.bc gcdext_lehmer.bc div_q.bc tdiv_qr.bc jacbase.bc jacobi_2.bc jacobi.bc get_d.bc matrix22_mul.bc matrix22_mul1_inverse_vector.bc hgcd_matrix.bc hgcd2.bc hgcd_step.bc hgcd_reduce.bc hgcd.bc hgcd_appr.bc hgcd2_jacobi.bc hgcd_jacobi.bc mullo_n.bc mullo_basecase.bc sqrlo.bc sqrlo_basecase.bc toom22_mul.bc toom32_mul.bc toom42_mul.bc toom52_mul.bc toom62_mul.bc toom33_mul.bc toom43_mul.bc toom53_mul.bc toom54_mul.bc toom63_mul.bc toom44_mul.bc toom6h_mul.bc toom6_sqr.bc toom8h_mul.bc toom8_sqr.bc toom_couple_handling.bc toom2_sqr.bc toom3_sqr.bc toom4_sqr.bc toom_eval_dgr3_pm1.bc toom_eval_dgr3_pm2.bc toom_eval_pm1.bc toom_eval_pm2.bc toom_eval_pm2exp.bc toom_eval_pm2rexp.bc toom_interpolate_5pts.bc toom_interpolate_6pts.bc toom_interpolate_7pts.bc toom_interpolate_8pts.bc toom_interpolate_12pts.bc toom_interpolate_16pts.bc invertappr.bc invert.bc binvert.bc mulmod_bnm1.bc sqrmod_bnm1.bc div_qr_1.bc div_qr_1n_pi1.bc div_qr_2.bc div_qr_2n_pi1.bc div_qr_2u_pi1.bc sbpi1_div_q.bc sbpi1_div_qr.bc sbpi1_divappr_q.bc dcpi1_div_q.bc dcpi1_div_qr.bc dcpi1_divappr_q.bc mu_div_qr.bc mu_divappr_q.bc mu_div_q.bc bdiv_q_1.bc sbpi1_bdiv_q.bc sbpi1_bdiv_qr.bc sbpi1_bdiv_r.bc dcpi1_bdiv_q.bc dcpi1_bdiv_qr.bc mu_bdiv_q.bc mu_bdiv_qr.bc bdiv_q.bc bdiv_qr.bc broot.bc brootinv.bc bsqrt.bc bsqrtinv.bc divexact.bc bdiv_dbm1c.bc redc_1.bc redc_2.bc redc_n.bc powm.bc powlo.bc sec_powm.bc sec_mul.bc sec_sqr.bc sec_div_qr.bc sec_div_r.bc sec_pi1_div_qr.bc sec_pi1_div_r.bc sec_add_1.bc sec_sub_1.bc sec_invert.bc trialdiv.bc remove.bc and_n.bc andn_n.bc nand_n.bc ior_n.bc iorn_n.bc nior_n.bc xor_n.bc xnor_n.bc copyi.bc copyd.bc zero.bc sec_tabselect.bc comb_tables.bc add_n_sub_n.bc || exit 1

cd $GMP_ROOT/mpz
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c 2fac_ui.c -o 2fac_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c add.c -o add.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c add_ui.c -o add_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c abs.c -o abs.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c aorsmul.c -o aorsmul.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c aorsmul_i.c -o aorsmul_i.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c and.c -o and.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c array_init.c -o array_init.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c bin_ui.c -o bin_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c bin_uiui.c -o bin_uiui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cdiv_q.c -o cdiv_q.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cdiv_q_ui.c -o cdiv_q_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cdiv_qr.c -o cdiv_qr.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cdiv_qr_ui.c -o cdiv_qr_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cdiv_r.c -o cdiv_r.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cdiv_r_ui.c -o cdiv_r_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cdiv_ui.c -o cdiv_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cfdiv_q_2exp.c -o cfdiv_q_2exp.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cfdiv_r_2exp.c -o cfdiv_r_2exp.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c clear.c -o clear.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c clears.c -o clears.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c clrbit.c -o clrbit.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cmp.c -o cmp.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cmp_d.c -o cmp_d.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cmp_si.c -o cmp_si.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cmp_ui.c -o cmp_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cmpabs.c -o cmpabs.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cmpabs_d.c -o cmpabs_d.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cmpabs_ui.c -o cmpabs_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c com.c -o com.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c combit.c -o combit.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cong.c -o cong.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cong_2exp.c -o cong_2exp.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cong_ui.c -o cong_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c divexact.c -o divexact.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c divegcd.c -o divegcd.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c dive_ui.c -o dive_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c divis.c -o divis.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c divis_ui.c -o divis_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c divis_2exp.c -o divis_2exp.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c dump.c -o dump.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c export.c -o export.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fac_ui.c -o fac_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fdiv_q.c -o fdiv_q.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fdiv_q_ui.c -o fdiv_q_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fdiv_qr.c -o fdiv_qr.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fdiv_qr_ui.c -o fdiv_qr_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fdiv_r.c -o fdiv_r.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fdiv_r_ui.c -o fdiv_r_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fdiv_ui.c -o fdiv_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fib_ui.c -o fib_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fib2_ui.c -o fib2_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fits_sint.c -o fits_sint.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fits_slong.c -o fits_slong.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fits_sshort.c -o fits_sshort.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fits_uint.c -o fits_uint.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fits_ulong.c -o fits_ulong.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fits_ushort.c -o fits_ushort.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c gcd.c -o gcd.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c gcd_ui.c -o gcd_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c gcdext.c -o gcdext.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_d.c -o get_d.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_d_2exp.c -o get_d_2exp.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_si.c -o get_si.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_str.c -o get_str.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_ui.c -o get_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c getlimbn.c -o getlimbn.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c hamdist.c -o hamdist.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c import.c -o import.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c init.c -o init.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c init2.c -o init2.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c inits.c -o inits.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c inp_raw.c -o inp_raw.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c inp_str.c -o inp_str.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c invert.c -o invert.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c ior.c -o ior.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c iset.c -o iset.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c iset_d.c -o iset_d.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c iset_si.c -o iset_si.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c iset_str.c -o iset_str.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c iset_ui.c -o iset_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c jacobi.c -o jacobi.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c kronsz.c -o kronsz.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c kronuz.c -o kronuz.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c kronzs.c -o kronzs.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c kronzu.c -o kronzu.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c lcm.c -o lcm.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c lcm_ui.c -o lcm_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c limbs_read.c -o limbs_read.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c limbs_write.c -o limbs_write.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c limbs_modify.c -o limbs_modify.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c limbs_finish.c -o limbs_finish.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c lucnum_ui.c -o lucnum_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c lucnum2_ui.c -o lucnum2_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c lucmod.c -o lucmod.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mfac_uiui.c -o mfac_uiui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c millerrabin.c -o millerrabin.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mod.c -o mod.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mul.c -o mul.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mul_2exp.c -o mul_2exp.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mul_si.c -o mul_si.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mul_ui.c -o mul_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c n_pow_ui.c -o n_pow_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c neg.c -o neg.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c nextprime.c -o nextprime.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c oddfac_1.c -o oddfac_1.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c out_raw.c -o out_raw.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c out_str.c -o out_str.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c perfpow.c -o perfpow.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c perfsqr.c -o perfsqr.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c popcount.c -o popcount.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c pow_ui.c -o pow_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c powm.c -o powm.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c powm_sec.c -o powm_sec.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c powm_ui.c -o powm_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c pprime_p.c -o pprime_p.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c prodlimbs.c -o prodlimbs.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c primorial_ui.c -o primorial_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c random.c -o random.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c random2.c -o random2.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c realloc.c -o realloc.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c realloc2.c -o realloc2.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c remove.c -o remove.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c roinit_n.c -o roinit_n.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c root.c -o root.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c rootrem.c -o rootrem.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c rrandomb.c -o rrandomb.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c scan0.c -o scan0.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c scan1.c -o scan1.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set.c -o set.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_d.c -o set_d.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_f.c -o set_f.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_q.c -o set_q.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_si.c -o set_si.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_str.c -o set_str.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_ui.c -o set_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c setbit.c -o setbit.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c size.c -o size.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sizeinbase.c -o sizeinbase.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sqrt.c -o sqrt.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sqrtrem.c -o sqrtrem.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c stronglucas.c -o stronglucas.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sub.c -o sub.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sub_ui.c -o sub_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c swap.c -o swap.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c tdiv_ui.c -o tdiv_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c tdiv_q.c -o tdiv_q.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c tdiv_q_2exp.c -o tdiv_q_2exp.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c tdiv_q_ui.c -o tdiv_q_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c tdiv_qr.c -o tdiv_qr.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c tdiv_qr_ui.c -o tdiv_qr_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c tdiv_r.c -o tdiv_r.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c tdiv_r_2exp.c -o tdiv_r_2exp.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c tdiv_r_ui.c -o tdiv_r_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c tstbit.c -o tstbit.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c ui_pow_ui.c -o ui_pow_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c ui_sub.c -o ui_sub.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c urandomb.c -o urandomb.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c urandomm.c -o urandomm.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c xor.c -o xor.bc || exit 1
${LLJVM_CC} -v -m -C lib.gmp.mpz -o $GMP_ROOT/lib.gmp.mpz.bc 2fac_ui.bc add.bc add_ui.bc abs.bc aorsmul.bc aorsmul_i.bc and.bc array_init.bc bin_ui.bc bin_uiui.bc cdiv_q.bc cdiv_q_ui.bc cdiv_qr.bc cdiv_qr_ui.bc cdiv_r.bc cdiv_r_ui.bc cdiv_ui.bc cfdiv_q_2exp.bc cfdiv_r_2exp.bc clear.bc clears.bc clrbit.bc cmp.bc cmp_d.bc cmp_si.bc cmp_ui.bc cmpabs.bc cmpabs_d.bc cmpabs_ui.bc com.bc combit.bc cong.bc cong_2exp.bc cong_ui.bc divexact.bc divegcd.bc dive_ui.bc divis.bc divis_ui.bc divis_2exp.bc dump.bc export.bc fac_ui.bc fdiv_q.bc fdiv_q_ui.bc fdiv_qr.bc fdiv_qr_ui.bc fdiv_r.bc fdiv_r_ui.bc fdiv_ui.bc fib_ui.bc fib2_ui.bc fits_sint.bc fits_slong.bc fits_sshort.bc fits_uint.bc fits_ulong.bc fits_ushort.bc gcd.bc gcd_ui.bc gcdext.bc get_d.bc get_d_2exp.bc get_si.bc get_str.bc get_ui.bc getlimbn.bc hamdist.bc import.bc init.bc init2.bc inits.bc inp_raw.bc inp_str.bc invert.bc ior.bc iset.bc iset_d.bc iset_si.bc iset_str.bc iset_ui.bc jacobi.bc kronsz.bc kronuz.bc kronzs.bc kronzu.bc lcm.bc lcm_ui.bc limbs_read.bc limbs_write.bc limbs_modify.bc limbs_finish.bc lucnum_ui.bc lucnum2_ui.bc lucmod.bc mfac_uiui.bc millerrabin.bc mod.bc mul.bc mul_2exp.bc mul_si.bc mul_ui.bc n_pow_ui.bc neg.bc nextprime.bc oddfac_1.bc out_raw.bc out_str.bc perfpow.bc perfsqr.bc popcount.bc pow_ui.bc powm.bc powm_sec.bc powm_ui.bc pprime_p.bc prodlimbs.bc primorial_ui.bc random.bc random2.bc realloc.bc realloc2.bc remove.bc roinit_n.bc root.bc rootrem.bc rrandomb.bc scan0.bc scan1.bc set.bc set_d.bc set_f.bc set_q.bc set_si.bc set_str.bc set_ui.bc setbit.bc size.bc sizeinbase.bc sqrt.bc sqrtrem.bc stronglucas.bc sub.bc sub_ui.bc swap.bc tdiv_ui.bc tdiv_q.bc tdiv_q_2exp.bc tdiv_q_ui.bc tdiv_qr.bc tdiv_qr_ui.bc tdiv_r.bc tdiv_r_2exp.bc tdiv_r_ui.bc tstbit.bc ui_pow_ui.bc ui_sub.bc urandomb.bc urandomm.bc xor.bc || exit 1

cd $GMP_ROOT/mpq
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c abs.c -o abs.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c aors.c -o aors.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c canonicalize.c -o canonicalize.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c clear.c -o clear.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c clears.c -o clears.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cmp.c -o cmp.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cmp_si.c -o cmp_si.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cmp_ui.c -o cmp_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c div.c -o div.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c equal.c -o equal.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_d.c -o get_d.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_den.c -o get_den.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_num.c -o get_num.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_str.c -o get_str.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c init.c -o init.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c inits.c -o inits.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c inp_str.c -o inp_str.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c inv.c -o inv.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c md_2exp.c -o md_2exp.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mul.c -o mul.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c neg.c -o neg.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c out_str.c -o out_str.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set.c -o set.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_den.c -o set_den.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_num.c -o set_num.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_si.c -o set_si.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_str.c -o set_str.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_ui.c -o set_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_z.c -o set_z.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_d.c -o set_d.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_f.c -o set_f.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c swap.c -o swap.bc || exit 1
${LLJVM_CC} -v -m -C lib.gmp.mpq -o $GMP_ROOT/lib.gmp.mpq.bc abs.bc aors.bc canonicalize.bc clear.bc clears.bc cmp.bc cmp_si.bc cmp_ui.bc div.bc equal.bc get_d.bc get_den.bc get_num.bc get_str.bc init.bc inits.bc inp_str.bc inv.bc md_2exp.bc mul.bc neg.bc out_str.bc set.bc set_den.bc set_num.bc set_si.bc set_str.bc set_ui.bc set_z.bc set_d.bc set_f.bc swap.bc || exit 1

cd $GMP_ROOT/mpf
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c init.c -o init.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c init2.c -o init2.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c inits.c -o inits.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set.c -o set.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_ui.c -o set_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_si.c -o set_si.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_str.c -o set_str.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_d.c -o set_d.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_z.c -o set_z.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_q.c -o set_q.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c iset.c -o iset.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c iset_ui.c -o iset_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c iset_si.c -o iset_si.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c iset_str.c -o iset_str.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c iset_d.c -o iset_d.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c clear.c -o clear.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c clears.c -o clears.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_str.c -o get_str.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c dump.c -o dump.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c size.c -o size.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c eq.c -o eq.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c reldiff.c -o reldiff.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sqrt.c -o sqrt.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c random2.c -o random2.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c inp_str.c -o inp_str.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c out_str.c -o out_str.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c add.c -o add.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c add_ui.c -o add_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sub.c -o sub.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sub_ui.c -o sub_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c ui_sub.c -o ui_sub.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mul.c -o mul.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mul_ui.c -o mul_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c div.c -o div.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c div_ui.c -o div_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cmp.c -o cmp.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cmp_d.c -o cmp_d.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cmp_z.c -o cmp_z.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cmp_si.c -o cmp_si.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c cmp_ui.c -o cmp_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mul_2exp.c -o mul_2exp.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c div_2exp.c -o div_2exp.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c abs.c -o abs.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c neg.c -o neg.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_d.c -o get_d.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_d_2exp.c -o get_d_2exp.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_dfl_prec.c -o set_dfl_prec.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_prc.c -o set_prc.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c set_prc_raw.c -o set_prc_raw.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_dfl_prec.c -o get_dfl_prec.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_prc.c -o get_prc.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c ui_div.c -o ui_div.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sqrt_ui.c -o sqrt_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c pow_ui.c -o pow_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c urandomb.c -o urandomb.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c swap.c -o swap.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_si.c -o get_si.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c get_ui.c -o get_ui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c int_p.c -o int_p.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c ceilfloor.c -o ceilfloor.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c trunc.c -o trunc.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fits_sint.c -o fits_sint.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fits_slong.c -o fits_slong.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fits_sshort.c -o fits_sshort.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fits_uint.c -o fits_uint.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fits_ulong.c -o fits_ulong.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fits_ushort.c -o fits_ushort.bc || exit 1
${LLJVM_CC} -v -m -C lib.gmp.mpf -o $GMP_ROOT/lib.gmp.mpf.bc init.bc init2.bc inits.bc set.bc set_ui.bc set_si.bc set_str.bc set_d.bc set_z.bc set_q.bc iset.bc iset_ui.bc iset_si.bc iset_str.bc iset_d.bc clear.bc clears.bc get_str.bc dump.bc size.bc eq.bc reldiff.bc sqrt.bc random2.bc inp_str.bc out_str.bc add.bc add_ui.bc sub.bc sub_ui.bc ui_sub.bc mul.bc mul_ui.bc div.bc div_ui.bc cmp.bc cmp_d.bc cmp_z.bc cmp_si.bc cmp_ui.bc mul_2exp.bc div_2exp.bc abs.bc neg.bc get_d.bc get_d_2exp.bc set_dfl_prec.bc set_prc.bc set_prc_raw.bc get_dfl_prec.bc get_prc.bc ui_div.bc sqrt_ui.bc pow_ui.bc urandomb.bc swap.bc get_si.bc get_ui.bc int_p.bc ceilfloor.bc trunc.bc fits_sint.bc fits_slong.bc fits_sshort.bc fits_uint.bc fits_ulong.bc fits_ushort.bc || exit 1

cd $GMP_ROOT/printf
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c asprintf.c -o asprintf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c asprntffuns.c -o asprntffuns.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c doprnt.c -o doprnt.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c doprntf.c -o doprntf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c doprnti.c -o doprnti.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fprintf.c -o fprintf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c obprintf.c -o obprintf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c obvprintf.c -o obvprintf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c obprntffuns.c -o obprntffuns.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c printf.c -o printf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c printffuns.c -o printffuns.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c snprintf.c -o snprintf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c snprntffuns.c -o snprntffuns.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sprintf.c -o sprintf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sprintffuns.c -o sprintffuns.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c vasprintf.c -o vasprintf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c vfprintf.c -o vfprintf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c vprintf.c -o vprintf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c vsnprintf.c -o vsnprintf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c vsprintf.c -o vsprintf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c repl-vsnprintf.c -o repl-vsnprintf.bc || exit 1
${LLJVM_CC} -v -m -C lib.gmp.printf -o $GMP_ROOT/lib.gmp.printf.bc asprintf.bc asprntffuns.bc doprnt.bc doprntf.bc doprnti.bc fprintf.bc obprintf.bc obvprintf.bc obprntffuns.bc printf.bc printffuns.bc snprintf.bc snprntffuns.bc sprintf.bc sprintffuns.bc vasprintf.bc vfprintf.bc vprintf.bc vsnprintf.bc vsprintf.bc repl-vsnprintf.bc || exit 1

cd $GMP_ROOT/scanf
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c doscan.c -o doscan.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fscanf.c -o fscanf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c fscanffuns.c -o fscanffuns.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c scanf.c -o scanf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sscanf.c -o sscanf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c sscanffuns.c -o sscanffuns.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c vfscanf.c -o vfscanf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c vscanf.c -o vscanf.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c vsscanf.c -o vsscanf.bc || exit 1
${LLJVM_CC} -v -m -C lib.gmp.scanf -o $GMP_ROOT/lib.gmp.scanf.bc doscan.bc fscanf.bc fscanffuns.bc scanf.bc sscanf.bc sscanffuns.bc vfscanf.bc vscanf.bc vsscanf.bc || exit 1

cd $GMP_ROOT/rand
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c rand.c -o rand.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c randclr.c -o randclr.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c randdef.c -o randdef.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c randiset.c -o randiset.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c randlc2s.c -o randlc2s.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c randlc2x.c -o randlc2x.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c randmt.c -o randmt.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c randmts.c -o randmts.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c rands.c -o rands.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c randsd.c -o randsd.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c randsdui.c -o randsdui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c randbui.c -o randbui.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c randmui.c -o randmui.bc || exit 1
${LLJVM_CC} -v -m -C lib.gmp.rand -o $GMP_ROOT/lib.gmp.rand.bc rand.bc randclr.bc randdef.bc randiset.bc randlc2s.bc randlc2x.bc randmt.bc randmts.bc rands.bc randsd.bc randsdui.bc randbui.bc randmui.bc || exit 1

cd $GMP_ROOT
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c assert.c -o assert.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c compat.c -o compat.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c errno.c -o errno.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c extract-dbl.c -o extract-dbl.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c invalid.c -o invalid.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c memory.c -o memory.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mp_bpl.c -o mp_bpl.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mp_clz_tab.c -o mp_clz_tab.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mp_dv_tab.c -o mp_dv_tab.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mp_minv_tab.c -o mp_minv_tab.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mp_get_fns.c -o mp_get_fns.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c mp_set_fns.c -o mp_set_fns.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c version.c -o version.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c nextprime.c -o nextprime.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c primesieve.c -o primesieve.bc || exit 1
CFLAGS="$CFLAGS_STD" ${LLJVM_CC} -v $EXTRA_LLJVM_FLAGS -c tal-reent.c -o tal-reent.bc || exit 1
${LLJVM_CC} -v -m -C lib.gmp.main -o $GMP_ROOT/lib.gmp.main.bc assert.bc compat.bc errno.bc extract-dbl.bc invalid.bc memory.bc mp_bpl.bc mp_clz_tab.bc mp_dv_tab.bc mp_minv_tab.bc mp_get_fns.bc mp_set_fns.bc version.bc nextprime.bc primesieve.bc tal-reent.bc || exit 1

${LLJVM_CC} -v -m -C lib.gmp -o $GMP_ROOT/lib.gmp.bc lib.gmp.mpn.bc lib.gmp.mpz.bc lib.gmp.mpq.bc lib.gmp.mpf.bc lib.gmp.printf.bc lib.gmp.scanf.bc lib.gmp.rand.bc lib.gmp.main.bc || exit 1

echo "${LLJVM_CC} -C lib.gmp -j -o lib.gmp-prelink.j lib.gmp.bc"
${LLJVM_CC} -C lib.gmp -j -o lib.gmp-prelink.j lib.gmp.bc || exit 1

echo "${LLJVM_CC} -v -a lib.gmp-prelink.j -L$HOME/lljvm-cc -l$HOME/lljvm-cc/lljvm.jar -C lib.gmp -o lib.gmp.j"
${LLJVM_CC} -v -a lib.gmp-prelink.j -L$HOME/lljvm-cc -l$HOME/lljvm-cc/lljvm.jar -C lib.gmp -o lib.gmp.j || exit 1

rm -fr ./jout || exit 1
mkdir ./jout || exit 1

echo "java -jar $HOME/lljvm-cc/tools/jasmin.jar -d ./jout lib.gmp.j"
java -jar $HOME/lljvm-cc/tools/jasmin.jar -d ./jout lib.gmp.j || exit 1

jar -cf lib.gmp.jar -C jout/ .  || exit 1
